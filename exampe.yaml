---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-server
  labels:
    app: discovery-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: discovery-server
  template:
    metadata:
      labels:
        app: discovery-server
    spec:
      containers:
        - name: discovery-server
          image: amarnathvenkatam/petclinic-discovery-server:dev
          ports:
            - containerPort: 8761
          resources: {}
      initContainers:
        - name: init-config-server
          image: busybox
          command: ['sh', '-c', 'until nc -z config-server:8888; do echo waiting for config-server; sleep 2; done;']
      restartPolicy: Always


---

apiVersion: v1
kind: Service
metadata:
  name: discovery-server
spec:
  selector:
    app: discovery-server
  ports:
    - name: "8761"
      port: 8761
      targetPort: 8761

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  labels:
    app: config-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
    spec:
      containers:
        - name: config-server
          image: amarnathvenkatam/petclinic-config-server:dev
          ports:
            - containerPort: 8888
          resources: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: config-server
spec:
  selector:
    app: config-server
  ports:
    - name: "8888"
      port: 8888
      targetPort: 8888


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: amarnathvenkatam/petclinic-api-gateway:dev
          ports:
            - containerPort: 8080
          resources: {}
      initContainers:
        - name: init-discovery-server
          image: busybox
          command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
      restartPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  type: NodePort
  selector:
    app: api-gateway
  ports:
    - name: "8080"
      nodePort: 30001
      port: 8080
      targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8080}]'
spec:
  ingressClassName: alb
  rules:
    - host: 031725044207.realhandsonlabs.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-server
  labels:
    app: admin-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: admin-server
  template:
    metadata:
      labels:
        app: admin-server
    spec:
      containers:
        - name: admin-server
          image: amarnathvenkatam/petclinic-admin-server:dev
          ports:
            - containerPort: 9090
          resources: {}
      initContainers:
        - name: init-discovery-server
          image: busybox
          command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: admin-server
spec:
  selector:
    app: admin-server
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers-service
  labels:
    app: customers-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: customers-service
  template:
    metadata:
      labels:
        app: customers-service
    spec:
      containers:
        - name: customers-service
          image: amarnathvenkatam/petclinic-customers-service:dev
          ports:
            - containerPort: 8081
          resources: {}
      initContainers:
        - name: init-discovery-server
          image: busybox
          command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
      restartPolicy: Always


---

apiVersion: v1
kind: Service
metadata:
  name: customers-service
spec:
  selector:
    app: customers-service
  ports:
    - name: "8081"
      port: 8081
      targetPort: 8081

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hystrix-dashboard
  labels:
    app: hystrix-dashboard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hystrix-dashboard
  template:
    metadata:
      labels:
        app: hystrix-dashboard
    spec:
      containers:
        - name: hystrix-dashboard
          image: amarnathvenkatam/petclinic-hystrix-dashboard:dev
          ports:
            - containerPort: 7979
          resources: {}
      initContainers:
        - name: init-discovery-server
          image: busybox
          command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: hystrix-dashboard
spec:
  selector:
    app: hystrix-dashboard
  ports:
    - name: "7979"
      port: 7979
      targetPort: 7979
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-server
  labels:
    app: mysql-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-server
  template:
    metadata:
      labels:
        app: mysql-server
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: petclinic
            - name: MYSQL_ROOT_PASSWORD
              value: petclinic
          image: mysql:5.7.8
          name: mysql-server
          ports:
            - containerPort: 3306
          resources: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-server
spec:
  selector:
    app: mysql-server
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus-server
          image: amarnathvenkatam/petclinic-prometheus-server:dev
          ports:
            - containerPort: 9090
          resources: {}
      restartPolicy: Always


---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
spec:
  selector:
    app: prometheus-server
  ports:
    - name: "9091"
      port: 9091
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vets-service
  labels:
    app: vets-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vets-service
  template:
    metadata:
      labels:
        app: vets-service
    spec:
      containers:
        - name: vets-service
          image: amarnathvenkatam/petclinic-vets-service:dev
          ports:
            - containerPort: 8083
          resources: {}
      initContainers:
        - name: init-discovery-server
          image: busybox
          command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
      restartPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: vets-service
spec:
  selector:
    app: vets-service
  ports:
    - name: "8083"
      port: 8083
      targetPort: 8083

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: visits-service
  labels:
    app: visits-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: visits-service
  template:
    metadata:
      labels:
        app: visits-service
    spec:
      containers:
        - name: visits-service
          image: amarnathvenkatam/petclinic-visits-service:dev
          ports:
            - containerPort: 8082
          resources: {}
      initContainers:
        - name: init-discovery-server
          image: busybox
          command: ['sh', '-c', 'until nc -z discovery-server:8761; do echo waiting for discovery-server; sleep 2; done;']
      restartPolicy: Always


--- 

apiVersion: v1
kind: Service
metadata:
  name: visits-service
spec:
  selector:
    app: visits-service
  ports:
    - name: "8082"
      port: 8082
      targetPort: 8082

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tracing-server
  labels:
    app: tracing-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tracing-server
  template:
    metadata:
      labels:
        app: tracing-server
    spec:
      containers:
        - env:
            - name: JAVA_OPTS
              value: -XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
          image: openzipkin/zipkin
          name: tracing-server
          ports:
            - containerPort: 9411
          resources: {}
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: tracing-server
spec:
  selector:
    app: tracing-server
  ports:
    - name: "9411"
      port: 9411
      targetPort: 9411

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-server
  labels:
    app: grafana-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-server
  template:
    metadata:
      labels:
        app: grafana-server
    spec:
      containers:
        - name: grafana-server
          image: amarnathvenkatam/petclinic-grafana-server:dev
          ports:
            - containerPort: 3000
          resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
spec:
  selector:
    app: prometheus-server
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
